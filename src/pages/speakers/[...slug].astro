---
import BaseLayout from "../../components/Common/BaseLayout.astro";
import SpeakersLinks from "../../components/Speakers/SpeakersLinks.astro";
import { Speaker, getSpeakers } from "../../scripts/api/sessionize_api";
import { formatTime } from "../../scripts/time_utils";
// 1. Generate a new path for every collection speaker

interface Props {
  speaker: Speaker;
}

export async function getStaticPaths() {
  const speakerEntries = await getSpeakers(true);
  return speakerEntries.map((speaker) => ({
    params: { slug: speaker.slug },
    props: { speaker },
  }));
}

// 2. When it's time to render, you can get the speaker directly from the prop
const { speaker } = Astro.props;
---

<BaseLayout pageTitle="Schedule">
  <div class="flex flex-col">
    <div class="flex md:flex-row flex-col items-center mb-10">
      <div class="flex-none w-40 mb-2">
        <img
          src={speaker.profilePicture}
          alt={speaker.fullName}
          class="rounded-full"
        />
      </div>
      <div class="flex-1 pl-6 flex flex-col md:items-start items-center">
        <h2 class="text-4xl mb-1">{speaker.fullName}</h2>
        <p class="text-lg mb-3">{speaker.tagLine}</p>
        <!-- 
        {
          speaker.data.community != null && (
            <div class="py-1 px-2 rounded-sm bg-green-600 text-white">
              {speaker.data.community}
            </div>
          )
        } -->
        <div class="py-2"></div>
        <SpeakersLinks
          linkedin={speaker.linkedin}
          twitter={speaker.twitter}
          github={speaker.github}
          websites={speaker.websites}
          facebook={speaker.facebook}
          instagram={speaker.instagram}
        />
      </div>
    </div>
    <p>{speaker.bio}</p>

    <div class="mt-5">
      <h3 class="text-3xl font-bold mb-4">Sessions</h3>
      <ul class="flex flex-col gap-2">
        {
          speaker.sessions &&
            speaker.sessions!.map((session) => {
              const dateStart = new Date(session.startsAt);
              const dateEnd = new Date(session.endsAt);

              const date = dateStart.toLocaleDateString("en-US", {
                month: "long",
                day: "numeric",
              });
              const startTime = formatTime(dateStart);
              const endTime = formatTime(dateEnd);

              return (
                <a class="flex flex-col" href={`/sessions/${session.slug}`}>
                  <p class="text-xl font-medium"> {session.title}</p>
                  <p>
                    {date}, {startTime} - {endTime}
                  </p>
                  <p>{session.room}</p>
                  <div class="flex gap-3 mt-3">
                    {session.topics.map((t) => (
                      <div class="py-1 px-2 rounded-md bg-gray-200 text-gray-800">
                        <span class="text-sm">{t}</span>
                      </div>
                    ))}
                  </div>
                </a>
              );
            })
        }
      </ul>
    </div>
  </div>
</BaseLayout>
